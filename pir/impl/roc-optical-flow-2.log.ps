%!PS-Adobe-2.0
%%Title: roc-optical-flow-2.log.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Jun 22 19:37:25 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 560 M
63 0 V
6185 0 R
-63 0 V
630 560 M
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
714 1575 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 50) Rshow
grestore
1.000 UL
LTb
714 2590 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 100) Rshow
grestore
1.000 UL
LTb
714 3605 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 150) Rshow
grestore
1.000 UL
LTb
714 4620 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 200) Rshow
grestore
1.000 UL
LTb
714 560 M
0 63 V
0 3997 R
0 -63 V
714 420 M
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
2276 560 M
0 63 V
0 3997 R
0 -63 V
0 -4137 R
gsave 0 setgray
( 50) Cshow
grestore
1.000 UL
LTb
3838 560 M
0 63 V
0 3997 R
0 -63 V
0 -4137 R
gsave 0 setgray
( 100) Cshow
grestore
1.000 UL
LTb
5400 560 M
0 63 V
0 3997 R
0 -63 V
0 -4137 R
gsave 0 setgray
( 150) Cshow
grestore
1.000 UL
LTb
6962 560 M
0 63 V
0 3997 R
0 -63 V
0 -4137 R
gsave 0 setgray
( 200) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
714 560 M
6248 0 V
0 4060 V
-6248 0 V
714 560 L
LTb
140 2590 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Trefferrate \(absolut\)) Cshow
grestore
grestore
LTb
3838 210 M
gsave 0 setgray
(Fehlerrate \(absolut\)) Cshow
grestore
LTb
3838 4830 M
gsave 0 setgray
(Eigener Algorithmus, Erkennungsrate, verschiedene Personen) Cshow
grestore
210 70 M
gsave 0 setgray
(Wed Jun 22 19:37:25 2005) Lshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
gsave 0 setgray
("roc-optical-flow-2.log" using 1:2) Rshow
grestore
LT0
714 580 Pls
714 601 Pls
714 621 Pls
714 641 Pls
714 662 Pls
714 682 Pls
714 702 Pls
714 722 Pls
714 743 Pls
714 763 Pls
714 783 Pls
714 804 Pls
714 824 Pls
714 844 Pls
714 865 Pls
714 885 Pls
714 905 Pls
714 925 Pls
714 946 Pls
714 966 Pls
714 986 Pls
714 1007 Pls
714 1027 Pls
714 1047 Pls
714 1068 Pls
714 1088 Pls
714 1108 Pls
714 1128 Pls
714 1149 Pls
714 1169 Pls
714 1189 Pls
714 1210 Pls
745 1210 Pls
776 1210 Pls
808 1210 Pls
839 1210 Pls
870 1210 Pls
901 1210 Pls
933 1210 Pls
964 1210 Pls
995 1210 Pls
1026 1210 Pls
1058 1210 Pls
1089 1210 Pls
1120 1210 Pls
1151 1210 Pls
1183 1210 Pls
1214 1210 Pls
1245 1210 Pls
1276 1210 Pls
1308 1210 Pls
1339 1210 Pls
1370 1210 Pls
1401 1210 Pls
1433 1210 Pls
1464 1210 Pls
1495 1210 Pls
1526 1210 Pls
1557 1210 Pls
1589 1210 Pls
1620 1210 Pls
1620 1230 Pls
1620 1250 Pls
1620 1271 Pls
1620 1291 Pls
1620 1311 Pls
1620 1331 Pls
1620 1352 Pls
1620 1372 Pls
1620 1392 Pls
1620 1413 Pls
1620 1433 Pls
1651 1433 Pls
1651 1453 Pls
1651 1474 Pls
1651 1494 Pls
1651 1514 Pls
1651 1534 Pls
1651 1555 Pls
1651 1575 Pls
1651 1595 Pls
1651 1616 Pls
1651 1636 Pls
1651 1656 Pls
1651 1677 Pls
1651 1697 Pls
1651 1717 Pls
1651 1737 Pls
1682 1737 Pls
1682 1758 Pls
1714 1758 Pls
1745 1758 Pls
1776 1758 Pls
1807 1758 Pls
1807 1778 Pls
1807 1798 Pls
1807 1819 Pls
1807 1839 Pls
1807 1859 Pls
1807 1880 Pls
1807 1900 Pls
1807 1920 Pls
1807 1940 Pls
1807 1961 Pls
1807 1981 Pls
1807 2001 Pls
1807 2022 Pls
1807 2042 Pls
1839 2042 Pls
1870 2042 Pls
1901 2042 Pls
1901 2062 Pls
1901 2083 Pls
1901 2103 Pls
1901 2123 Pls
1901 2143 Pls
1901 2164 Pls
1932 2164 Pls
1932 2184 Pls
1932 2204 Pls
1932 2225 Pls
1932 2245 Pls
1932 2265 Pls
1932 2286 Pls
1964 2286 Pls
1964 2306 Pls
1995 2306 Pls
1995 2326 Pls
2026 2326 Pls
2026 2346 Pls
2026 2367 Pls
2057 2367 Pls
2057 2387 Pls
2057 2407 Pls
2057 2428 Pls
2057 2448 Pls
2089 2448 Pls
2120 2448 Pls
2120 2468 Pls
2120 2489 Pls
2120 2509 Pls
2120 2529 Pls
2120 2549 Pls
2120 2570 Pls
2151 2570 Pls
2182 2570 Pls
2214 2570 Pls
2214 2590 Pls
2214 2610 Pls
2214 2631 Pls
2214 2651 Pls
2214 2671 Pls
2214 2692 Pls
2214 2712 Pls
2214 2732 Pls
2214 2752 Pls
2214 2773 Pls
2214 2793 Pls
2214 2813 Pls
2245 2813 Pls
2276 2813 Pls
2307 2813 Pls
2307 2834 Pls
2307 2854 Pls
2307 2874 Pls
2307 2895 Pls
2307 2915 Pls
2307 2935 Pls
2307 2955 Pls
2307 2976 Pls
2307 2996 Pls
2307 3016 Pls
2307 3037 Pls
2307 3057 Pls
2307 3077 Pls
2307 3098 Pls
2307 3118 Pls
2307 3138 Pls
2307 3158 Pls
2307 3179 Pls
2307 3199 Pls
2307 3219 Pls
2307 3240 Pls
2307 3260 Pls
2307 3280 Pls
2307 3301 Pls
2307 3321 Pls
2307 3341 Pls
2307 3361 Pls
2307 3382 Pls
2307 3402 Pls
2307 3422 Pls
2307 3443 Pls
2307 3463 Pls
2307 3483 Pls
2307 3504 Pls
2307 3524 Pls
2307 3544 Pls
2307 3564 Pls
2307 3585 Pls
6594 4487 Pls
1.000 UL
LTb
714 560 M
6248 0 V
0 4060 V
-6248 0 V
714 560 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
