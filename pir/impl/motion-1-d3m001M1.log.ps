%!PS-Adobe-2.0
%%Title: motion-1-d3m001M1.log.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu May 26 15:31:09 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 560 M
63 0 V
6269 0 R
-63 0 V
546 560 M
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
630 1372 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
gsave 0 setgray
( 2) Rshow
grestore
1.000 UL
LTb
630 2184 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
gsave 0 setgray
( 4) Rshow
grestore
1.000 UL
LTb
630 2996 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
gsave 0 setgray
( 6) Rshow
grestore
1.000 UL
LTb
630 3808 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
gsave 0 setgray
( 8) Rshow
grestore
1.000 UL
LTb
630 4620 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
gsave 0 setgray
( 10) Rshow
grestore
1.000 UL
LTb
630 560 M
0 63 V
0 3997 R
0 -63 V
630 420 M
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
2213 560 M
0 63 V
0 3997 R
0 -63 V
0 -4137 R
gsave 0 setgray
( 50) Cshow
grestore
1.000 UL
LTb
3796 560 M
0 63 V
0 3997 R
0 -63 V
0 -4137 R
gsave 0 setgray
( 100) Cshow
grestore
1.000 UL
LTb
5379 560 M
0 63 V
0 3997 R
0 -63 V
0 -4137 R
gsave 0 setgray
( 150) Cshow
grestore
1.000 UL
LTb
6962 560 M
0 63 V
0 3997 R
0 -63 V
0 -4137 R
gsave 0 setgray
( 200) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
630 560 M
6332 0 V
0 4060 V
-6332 0 V
630 560 L
LTb
140 2590 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Anzahl von Personen) Cshow
grestore
grestore
LTb
3796 210 M
gsave 0 setgray
(Bildsequenz) Cshow
grestore
LTb
3796 4830 M
gsave 0 setgray
(SegmentMotion History 3s, Buffer 2, Min 0.01, Max 1, keine Person im Bild) Cshow
grestore
210 70 M
gsave 0 setgray
(Thu May 26 15:31:09 2005) Lshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
gsave 0 setgray
("motion-1-d3m001M1.log" using 2) Rshow
grestore
LT0
630 560 Pls
662 560 Pls
693 560 Pls
725 560 Pls
757 560 Pls
788 560 Pls
820 560 Pls
852 560 Pls
883 560 Pls
915 560 Pls
947 560 Pls
978 560 Pls
1010 560 Pls
1042 560 Pls
1073 560 Pls
1105 560 Pls
1137 560 Pls
1168 560 Pls
1200 560 Pls
1232 560 Pls
1263 560 Pls
1295 560 Pls
1327 560 Pls
1358 560 Pls
1390 560 Pls
1422 560 Pls
1453 560 Pls
1485 560 Pls
1516 560 Pls
1548 560 Pls
1580 560 Pls
1611 560 Pls
1643 560 Pls
1675 560 Pls
1706 560 Pls
1738 560 Pls
1770 560 Pls
1801 560 Pls
1833 560 Pls
1865 560 Pls
1896 560 Pls
1928 560 Pls
1960 560 Pls
1991 560 Pls
2023 560 Pls
2055 560 Pls
2086 560 Pls
2118 560 Pls
2150 560 Pls
2181 560 Pls
2213 560 Pls
2245 560 Pls
2276 560 Pls
2308 560 Pls
2340 560 Pls
2371 560 Pls
2403 560 Pls
2435 560 Pls
2466 560 Pls
2498 560 Pls
2530 560 Pls
2561 560 Pls
2593 560 Pls
2625 560 Pls
2656 560 Pls
2688 560 Pls
2720 560 Pls
2751 560 Pls
2783 560 Pls
2815 560 Pls
2846 560 Pls
2878 560 Pls
2910 560 Pls
2941 560 Pls
2973 560 Pls
3005 560 Pls
3036 560 Pls
3068 560 Pls
3099 560 Pls
3131 560 Pls
3163 560 Pls
3194 560 Pls
3226 560 Pls
3258 560 Pls
3289 560 Pls
3321 560 Pls
3353 560 Pls
3384 560 Pls
3416 560 Pls
3448 560 Pls
3479 560 Pls
3511 560 Pls
3543 560 Pls
3574 560 Pls
3606 560 Pls
3638 560 Pls
3669 560 Pls
3701 560 Pls
3733 560 Pls
3764 560 Pls
3796 560 Pls
3828 560 Pls
3859 560 Pls
3891 560 Pls
3923 560 Pls
3954 560 Pls
3986 560 Pls
4018 560 Pls
4049 560 Pls
4081 560 Pls
4113 560 Pls
4144 560 Pls
4176 560 Pls
4208 560 Pls
4239 560 Pls
4271 560 Pls
4303 560 Pls
4334 560 Pls
4366 560 Pls
4398 560 Pls
4429 560 Pls
4461 560 Pls
4493 560 Pls
4524 560 Pls
4556 560 Pls
4588 560 Pls
4619 560 Pls
4651 560 Pls
4682 560 Pls
4714 560 Pls
4746 560 Pls
4777 560 Pls
4809 560 Pls
4841 560 Pls
4872 560 Pls
4904 560 Pls
4936 560 Pls
4967 560 Pls
4999 560 Pls
5031 560 Pls
5062 560 Pls
5094 560 Pls
5126 560 Pls
5157 560 Pls
5189 560 Pls
5221 560 Pls
5252 560 Pls
5284 560 Pls
5316 560 Pls
5347 560 Pls
5379 560 Pls
5411 560 Pls
5442 560 Pls
5474 560 Pls
5506 560 Pls
5537 560 Pls
5569 560 Pls
5601 560 Pls
5632 560 Pls
5664 560 Pls
5696 560 Pls
5727 560 Pls
5759 560 Pls
5791 560 Pls
5822 560 Pls
5854 560 Pls
5886 560 Pls
5917 560 Pls
5949 560 Pls
5981 560 Pls
6012 560 Pls
6044 560 Pls
6076 560 Pls
6107 560 Pls
6139 560 Pls
6171 560 Pls
6202 560 Pls
6234 560 Pls
6265 560 Pls
6297 560 Pls
6329 560 Pls
6360 560 Pls
6392 560 Pls
6424 560 Pls
6455 560 Pls
6487 560 Pls
6519 560 Pls
6550 560 Pls
6582 560 Pls
6614 560 Pls
6645 560 Pls
6677 560 Pls
6709 560 Pls
6740 560 Pls
6772 560 Pls
6804 560 Pls
6835 560 Pls
6867 560 Pls
6899 560 Pls
6930 560 Pls
6594 4487 Pls
1.000 UL
LTb
630 560 M
6332 0 V
0 4060 V
-6332 0 V
630 560 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
